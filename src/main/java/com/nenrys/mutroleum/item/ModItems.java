package com.nenrys.mutroleum.item;

import com.nenrys.mutroleum.Mutroleum;
import com.nenrys.mutroleum.fluid.DMBUCKET;
import com.nenrys.mutroleum.fluid.ModFluids;
import com.nenrys.mutroleum.misc.ModCreativeModeTab;
import net.minecraft.world.item.BucketItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.Items;
import net.minecraft.world.item.crafting.RecipeType;
import net.minecraft.world.level.material.Fluids;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;
import org.jetbrains.annotations.Nullable;

public class ModItems {

    public static final DeferredRegister<Item> ITEMS =
            DeferredRegister.create(ForgeRegistries.ITEMS, Mutroleum.MOD_ID);

    //placeholder condition for longer burn time
    public static final RegistryObject<Item> P_MUTROLEUM = ITEMS.register("p_mutroleum",
            () -> new Item(new Item.Properties().tab(ModCreativeModeTab.MUTROLEUM_TAB)){
                @Override
                public int getBurnTime(ItemStack itemStack, @Nullable RecipeType<?> recipeType) {
                    return itemStack.getCount() < 5 ? 800 : 3200;
                }
            }

    );

    public static final RegistryObject<Item> SPECIES_DEBUGGER = ITEMS.register("species_debugger",
            () -> new SpeciesDebugItem(new Item.Properties().tab(ModCreativeModeTab.MUTROLEUM_TAB).stacksTo(1)));

    public static final RegistryObject<Item> MUTROLIC_FRUIT = ITEMS.register("mutrolic_fruit",
            () -> new MutrolicFoodItem(new Item.Properties().tab(ModCreativeModeTab.MUTROLEUM_TAB).food(MutrolicFoodItem.FRUIT_NON_CARRIER), MutrolicFoodItem.FRUIT_CARRIER));

   // public static final RegistryObject<Item> DEAD_MUTROLEUM_BUCKET = ITEMS.register("dead_mutroleum_bucket",
     //       () -> new dMBucket(() -> Fluids.EMPTY, new Item.Properties().tab(ModCreativeModeTab.MUTROLEUM_TAB).stacksTo(1)));

    public static final RegistryObject<BucketItem> DM_BUCKET = ITEMS.register("dm_bucket",
            () -> new DMBUCKET(ModFluids.SOURCE_DM,
                    new Item.Properties().tab(ModCreativeModeTab.MUTROLEUM_TAB).stacksTo(1).craftRemainder(Items.BUCKET)));

    //autogenerated items, do not change __0__
	public static final RegistryObject<Item> BIOSTATIC_RELIC = ITEMS.register("biostatic_relic", 
		() -> new Item(new Item.Properties().tab(ModCreativeModeTab.MUTROLEUM_TAB)));
	public static final RegistryObject<Item> C_MUTROLEUM = ITEMS.register("c_mutroleum", 
		() -> new Item(new Item.Properties().tab(ModCreativeModeTab.MUTROLEUM_TAB)));

    public static void register(IEventBus eventBus) {
        ITEMS.register(eventBus);
    }

}
